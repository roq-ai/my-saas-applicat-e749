generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model maintenance {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  maintenance_type String   @db.VarChar(255)
  date             DateTime @db.Timestamp(6)
  notes            String?  @db.VarChar(255)
  vehicle_id       String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  vehicle          vehicle  @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicle     vehicle[]
}

model reservation {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time    DateTime @db.Timestamp(6)
  end_time      DateTime @db.Timestamp(6)
  car_renter_id String   @db.Uuid
  vehicle_id    String   @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user     @relation(fields: [car_renter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicle       vehicle  @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  reservation  reservation[]
}

model vehicle {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make            String        @db.VarChar(255)
  model           String        @db.VarChar(255)
  year            Int
  location        String        @db.VarChar(255)
  availability    Boolean
  organization_id String        @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  maintenance     maintenance[]
  reservation     reservation[]
  organization    organization  @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
